// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kk.Message.proto

/*
Package kk is a generated protocol buffer package.

It is generated from these files:
	kk.Message.proto
	kk.Request.proto
	kk.Response.proto

It has these top-level messages:
	Message
	Request
	Response
*/
package kk

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Message_Type int32

const (
	Message_PING     Message_Type = 0
	Message_PONG     Message_Type = 1
	Message_REQUEST  Message_Type = 2
	Message_RESPONSE Message_Type = 3
)

var Message_Type_name = map[int32]string{
	0: "PING",
	1: "PONG",
	2: "REQUEST",
	3: "RESPONSE",
}
var Message_Type_value = map[string]int32{
	"PING":     0,
	"PONG":     1,
	"REQUEST":  2,
	"RESPONSE": 3,
}

func (x Message_Type) String() string {
	return proto.EnumName(Message_Type_name, int32(x))
}
func (Message_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Message struct {
	// *
	// 消息类型
	Type Message_Type `protobuf:"varint,1,opt,name=type,enum=kk.Message_Type" json:"type,omitempty"`
	// *
	// 来源
	From int64 `protobuf:"varint,2,opt,name=from" json:"from,omitempty"`
	// *
	// 目标
	To int64 `protobuf:"varint,3,opt,name=to" json:"to,omitempty"`
	// *
	// 客户端请求时间
	// @type {int64}
	Atime int64 `protobuf:"varint,4,opt,name=atime" json:"atime,omitempty"`
	// *
	// 数据
	// @type {bytes}
	Data []byte `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Message) GetType() Message_Type {
	if m != nil {
		return m.Type
	}
	return Message_PING
}

func (m *Message) GetFrom() int64 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *Message) GetTo() int64 {
	if m != nil {
		return m.To
	}
	return 0
}

func (m *Message) GetAtime() int64 {
	if m != nil {
		return m.Atime
	}
	return 0
}

func (m *Message) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Message)(nil), "kk.Message")
	proto.RegisterEnum("kk.Message_Type", Message_Type_name, Message_Type_value)
}

func init() { proto.RegisterFile("kk.Message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 193 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xc8, 0xce, 0xd6, 0xf3,
	0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xca, 0xce,
	0x56, 0xda, 0xc2, 0xc8, 0xc5, 0x0e, 0x15, 0x15, 0x52, 0xe1, 0x62, 0x29, 0xa9, 0x2c, 0x48, 0x95,
	0x60, 0x54, 0x60, 0xd4, 0xe0, 0x33, 0x12, 0xd0, 0x43, 0xd2, 0x10, 0x52, 0x59, 0x90, 0x1a, 0x04,
	0x96, 0x15, 0x12, 0xe2, 0x62, 0x49, 0x2b, 0xca, 0xcf, 0x95, 0x60, 0x52, 0x60, 0xd4, 0x60, 0x0e,
	0x02, 0xb3, 0x85, 0xf8, 0xb8, 0x98, 0x4a, 0xf2, 0x25, 0x98, 0xc1, 0x22, 0x4c, 0x25, 0xf9, 0x42,
	0x22, 0x5c, 0xac, 0x89, 0x25, 0x99, 0xb9, 0xa9, 0x12, 0x2c, 0x60, 0x21, 0x08, 0x07, 0xa4, 0x33,
	0x25, 0xb1, 0x24, 0x51, 0x82, 0x55, 0x81, 0x51, 0x83, 0x27, 0x08, 0xcc, 0x56, 0x32, 0xe5, 0x62,
	0x01, 0x99, 0x2d, 0xc4, 0xc1, 0xc5, 0x12, 0xe0, 0xe9, 0xe7, 0x2e, 0xc0, 0x00, 0x66, 0xf9, 0xfb,
	0xb9, 0x0b, 0x30, 0x0a, 0x71, 0x73, 0xb1, 0x07, 0xb9, 0x06, 0x86, 0xba, 0x06, 0x87, 0x08, 0x30,
	0x09, 0xf1, 0x70, 0x71, 0x04, 0xb9, 0x06, 0x07, 0xf8, 0xfb, 0x05, 0xbb, 0x0a, 0x30, 0x27, 0xb1,
	0x81, 0x7d, 0x60, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xe5, 0x62, 0xff, 0xf2, 0xd5, 0x00, 0x00,
	0x00,
}
